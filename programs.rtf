{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red249\green249\blue249;
\red0\green0\blue0;\red255\green255\blue255;}
{\*\expandedcolortbl;;\csgray\c0;\csgray\c100000;\cssrgb\c98039\c98039\c98039;
\cssrgb\c0\c0\c0;\cssrgb\c100000\c100000\c100000;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Office\
TeXshop\
Vlc \
anki\
android\
transmission\
paint brush\
chrome\
photoshop\
python 2.7 y 3.6\
virtual box (gloriaMontoya Hola12345)\
jupyter notebook\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\fs22 \cf2 \cb3 \CocoaLigature0 token: e74fe092c42d393b7ed1fc352acbc8f987110b0dfcdac2ae\
\pard\pardeftab720\partightenfactor0

\fs25\fsmilli12800 \cf0 \cb4 \expnd0\expndtw0\kerning0
\CocoaLigature1 Ctrl-C \'97> 
\f0\b\fs32 \cb6 not
\b0  stop the Docker container itself. por eso:
\f1\fs25\fsmilli12800 \cb4 \
docker stop cntk-jupyter-notebooks\
\
container: running instance of an image\
image: template for creating the environment (snapshot of the system at a particular time) \'97> off, software, app code \'97>all included\
\
docker file: how images are defined\
*when starting, it\'92s not neccesary to do it from scratch, but from a already existing image (it has \cb4 already\cb4  been built). Then we build on top of that\
\
*when you run the image you get a container, and that container will listen on port xx (by default it ignores all incoming requests)\
\
when building the docker file:\
1. docker downloads file from the hub\
2. copy our files from any specific path to a certain location inside the image\
3. run the containers on port 80\
OUTPUTS: new customized version we will be able to run\
\
when we change the file, the docker won\'92t reflect the new version of the file, thats becuase when we built the image it made a copy of that file, so to see the change we would have to rebuild the image and spin   a new container from the updated image  \'97> volumnes come in here\
\
SOLUTION: share folders between the host and the container = mount a local directory on the computer as a volumen inside the container. Then the container when it\'b4s running it will be able to see that were working on \
\
PORQUE IP ES IMPORTANTE?\
behind the scenes docker starts a lightweight masOS visualization solution on top of Hypervision (somehow a VM is created, this is not correctly correct though). Then when we run docker images inside that VM and to access them we need that machine IP address (private address in a private network on my Mac)\
\
FIRST RUN: HELLO WORLD\
docker run hello-world\
this does:\
1. \'93hello world\'94 is the name of an imag on the public docker hub repository\
2. when we ask docker to run it, it downs the image locally, creates a container based on that image and then starts it up\
3. it outputs some text\
\
docker ps: dockers running in the background\
}